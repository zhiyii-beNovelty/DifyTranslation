name: Validate and Correct Metadata

on:
  workflow_dispatch:  # Enables manual trigger
  push:
    paths:
      - '.github/workflows/validateMetadata.yml'

jobs:
  validate_and_correct_metadata:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          persist-credentials: false  # Prevent storing credentials for the default GITHUB_TOKEN

      - name: Set up Git
        run: |
          git config --global user.name "GitHub Action"
          git config --global user.email "action@github.com"

      - name: Validate and correct metadata
        run: |
          # Function to validate and correct metadata
          correct_metadata() {
            local file=$1
            local lang=$2
            local metatitle_suffix
            local lang_code

            case "$lang" in
              "zh-cn" | "zh-CN")
                metatitle_suffix="FabriXAI 用户指南"
                lang_code="zh-CN"
                ;;
              "es")
                metatitle_suffix="Guía del Usuario de FabriXA"
                lang_code="es"
                ;;
              "fr")
                metatitle_suffix="Guide de l'utilisateur FabriXAI"
                lang_code="fr"
                ;;
              "de")
                metatitle_suffix="FabriXAI Benutzerhandbuch"
                lang_code="de"
                ;;
              "ja")
                metatitle_suffix="FabriXAIユーザーガイド"
                lang_code="ja"
                ;;
              "ko")
                metatitle_suffix="FabriXAI 사용자 가이드"
                lang_code="ko"
                ;;
              *) echo "Unknown language: $lang" && return ;;
            esac
            
            local metadata=$(head -n 10 "$file")
            local needs_update=false

            echo "Processing file: $file"
            echo "Current metadata:\n$metadata"

            if [[ $metadata =~ metatitle:\ (.+) ]]; then
              metatitle="${BASH_REMATCH[1]}"
              if [[ ! $metatitle == *"$metatitle_suffix" ]]; then
                echo "Updating metatitle in $file"
                metatitle="metatitle: ${metatitle% *} $metatitle_suffix"
                needs_update=true
              fi
            else
              echo "Adding metatitle to $file"
              metatitle="metatitle: Default Title $metatitle_suffix"
              needs_update=true
            fi

            if [[ $metadata =~ lang:\ (.+) ]]; then
              file_lang="${BASH_REMATCH[1]}"
              if [[ $file_lang != "$lang_code" ]]; then
                echo "Updating lang in $file from $file_lang to $lang_code"
                needs_update=true
              fi
            else
              echo "Adding lang: $lang_code to $file"
              needs_update=true
            fi

            # If changes are needed, update the file
            if $needs_update; then
              echo "Changes needed in $file. Updating..."
              temp_file=$(mktemp)

              while IFS= read -r line; do
                if [[ $line =~ metatitle: ]]; then
                  echo "$metatitle" >> "$temp_file"
                elif [[ $line =~ lang: ]]; then
                  echo "lang: $lang_code" >> "$temp_file"
                else
                  echo "$line" >> "$temp_file"
                fi
              done < "$file"

              mv "$temp_file" "$file"
              echo "Updated: $file"
            else
              echo "No updates needed for $file"
            fi
          }

          # Find all relevant files, excluding index.md
          find src -type f ! -name "index.md" | while read -r file; do
            case "$file" in
              src/zh-cn/* | src/zh-CN/*) correct_metadata "$file" "zh-cn" ;;
              src/es/*)    correct_metadata "$file" "es" ;;
              src/fr/*)    correct_metadata "$file" "fr" ;;
              src/de/*)    correct_metadata "$file" "de" ;;
              src/ja/*)    correct_metadata "$file" "ja" ;;
              src/ko/*)    correct_metadata "$file" "ko" ;;
              *)           echo "File $file does not match known language directories." ;;
            esac
          done

      - name: Commit changes
        run: |
          git add src/**  # Add changes to all files in the src directory
          git commit -m "Update translation files with corrected metadata" || echo "No changes to commit"

      - name: Push changes
        run: |
          git push origin HEAD:${{ github.ref }}  # Push changes to the current branch
